#cloud-config

write_files:
 - path: /config/onboarding/waitForF5Ready.sh
   permissions: 0755
   owner: root:root
   encoding: b64
   content: IyEvYmluL2Jhc2gKCgplY2hvIGBkYXRlYCAtLSBXYWl0aW5nIGZvciBGNSB0byBiZSByZWFkeQpzbGVlcCA1CndoaWxlIFtbICEgLWUgJy92YXIvcHJvbXB0L3BzMScgXV07IGRvCiAgZWNobyAtbiAnLicKICBzbGVlcCA1CmRvbmUKCnNsZWVwIDUKClNUQVRVUz1gY2F0IC92YXIvcHJvbXB0L3BzMWAKd2hpbGUgW1sgJHtTVEFUVVN9eCAhPSAnTk8gTElDRU5TRSd4IF1dOyBkbwogIGVjaG8gLW4gJy4nCiAgc2xlZXAgNQogIFNUQVRVUz1gY2F0IC92YXIvcHJvbXB0L3BzMWAKZG9uZQoKZWNobyAtbiAnICcKCndoaWxlIFtbICEgLWUgJy92YXIvcHJvbXB0L2NtaVN5bmNTdGF0dXMnIF1dOyBkbwogIGVjaG8gLW4gJy4nCiAgc2xlZXAgNQpkb25lCgpTVEFUVVM9YGNhdCAvdmFyL3Byb21wdC9jbWlTeW5jU3RhdHVzYAp3aGlsZSBbWyAke1NUQVRVU314ICE9ICdTdGFuZGFsb25lJ3ggXV07IGRvCiAgZWNobyAtbiAnLicKICBzbGVlcCA1CiAgU1RBVFVTPWBjYXQgL3Zhci9wcm9tcHQvY21pU3luY1N0YXR1c2AKZG9uZQplY2hvCmVjaG8gYGRhdGVgIC0tIEY1IGlzIHJlYWR5Li4uCgoK

 - path: /config/onboarding/setupLogging.sh
   permissions: 0755
   owner: root:root
   encoding: b64
   content: ICMhL2Jpbi9iYXNoCgpGSUxFPS92YXIvbG9nL29uYm9hcmQubG9nCmlmIFsgISAtZSAkRklMRSBdCnRoZW4KICB0b3VjaCAkRklMRQogIG5vaHVwICQwIDA8Ji0gJj4vZGV2L251bGwgJgogIGV4aXQKZmkKZXhlYyAxPCYtCmV4ZWMgMjwmLQpleGVjIDE8PiRGSUxFCmV4ZWMgMj4mMQo=

   # this is only required to access the internet from our internal lab networks
 - path: /etc/profile.d/cisco.interal.proxies.sh
   permissions: 0755
   owner: root:root
   encoding: b64
   content: IyBBZGRpbmcgY2lzY28gcHJveGllcwpleHBvcnQgaHR0cF9wcm94eT1odHRwOi8vcHJveHkuZXNsLmNpc2NvLmNvbTo4MC8KZXhwb3J0IGh0dHBzX3Byb3h5PWh0dHA6Ly9wcm94eS5lc2wuY2lzY28uY29tOjgwLw==

 - path: /config/onboarding/onboard.sh
   permissions: 0755
   owner: root:root
   content: |
     #!/bin/bash

     . /config/onboarding/setupLogging.sh

     if [ -e /config/onboarding/waitForF5Ready.sh ]
     then
         echo "/config/onboarding/waitForF5Ready.sh exists"
         /config/onboarding/waitForF5Ready.sh
     else
         echo "/config/onboarding/waitForF5Ready.sh is missing"
         echo "Failsafe sleep for 5 minutes..."
         sleep 5m
     fi

     echo "Configure access"
     tmsh modify sys global-settings gui-setup ${GUI_SETUP}
     tmsh modify sys global-settings hostname ${F5HOSTNAME}
     tmsh modify auth user admin shell bash password ${BIGIP_ADMIN_PASSWORD}
     tmsh modify sys db systemauth.disablerootlogin value ${DISABLE_ROOT_LOGIN}
     tmsh save /sys config

     echo "Disable mgmt-dhcp..."
     tmsh modify sys global-settings mgmt-dhcp disabled
     echo "Set Management IP..."
     tmsh create /sys management-ip ${MGMT_IP_ADDRESS}/${MGMT_IP_PREFIX}
     tmsh delete /sys management-route default
     tmsh create /sys management-route default gateway ${MGMT_GATEWAY}
     echo "Save changes..."
     tmsh save /sys config partitions all
     echo "Set NTP..."
     tmsh modify sys ntp servers add { ntp.esl.cisco.com 0.pool.ntp.org 1.pool.ntp.org }
     tmsh modify sys ntp timezone ${TIMEZONE}
     echo "Add DNS server..."
     tmsh modify sys dns name-servers add { ${NAME_SERVER} 173.36.224.108 }
     tmsh modify sys httpd ssl-port ${MANAGEMENT_GUI_PORT}
     tmsh modify net self-allow defaults add { tcp:${MANAGEMENT_GUI_PORT} }
     if [[ \ "${MANAGEMENT_GUI_PORT}\ " != \ "443\ " ]]
         then tmsh modify net self-allow defaults delete { tcp:443 }
     fi
     tmsh mv cm device bigip1 ${F5HOSTNAME}
     tmsh save /sys config

     echo "Register F5...Key: $LICENSE_KEY"
     . /etc/profile.d/cisco.interal.proxies.sh
     tmsh install /sys license registration-key $LICENSE_KEY
     tmsh show sys license
     sleep 30

     echo "Set VLAN and SelfIP..."
     tmsh create /net vlan vlan${NIC_2_VLAN} description INSIDE interfaces add { 1.2 } tag ${NIC_2_VLAN}
     tmsh create /net self INT_INSIDE address ${NIC_2_IP_ADDRESS}/${NIC_2_IP_PREFIX} allow-service add { tcp:bgp default } traffic-group traffic-group-local-only vlan vlan${NIC_2_VLAN}
     tmsh create /net vlan vlan${NIC_3_VLAN} description OUTSIDE interfaces add { 1.3 } tag ${NIC_3_VLAN}
     tmsh create /net self INT_OUTSIDE address ${NIC_3_IP_ADDRESS}/${NIC_3_IP_PREFIX} allow-service add { tcp:bgp default } traffic-group traffic-group-local-only vlan vlan${NIC_3_VLAN}
     tmsh save /sys config
     sleep 10

     tmsh modify net route-domain 0 routing-protocol add { BGP }
     tmsh save /sys config
     sleep 20
     echo "Set BGP..."
     cat << EOF > /config/onboarding/myBGP
     !
     bgp extended-asn-cap
     !
     router bgp ${AS_NUMBER}
       bgp log-neighbor-changes
       bgp graceful-restart restart-time 120
       neighbor ${NIC_2_NEIGHBOR_1_IP_ADDRESS} remote-as ${NIC_2_NEIGHBOR_1_ASNUMBER}
     !  neighbor ${NIC_2_NEIGHBOR_1_IP_ADDRESS} local-as ${NIC_2_NEIGHBOR_1_REMOTE_LOCAL_AS}
       neighbor ${NIC_3_NEIGHBOR_1_IP_ADDRESS} remote-as ${NIC_3_NEIGHBOR_1_ASNUMBER}
     !  neighbor ${NIC_3_NEIGHBOR_2_IP_ADDRESS} remote-as ${NIC_3_NEIGHBOR_1_ASNUMBER}
       max-paths ebgp 2
     !
     EOF
     imish -f /config/onboarding/myBGP
     imish -e "write"
     sleep 30
     #echo "Preset virtual server range..."
     #imish -e "show ip route" | grep ${NIC_3_NEIGHBOR_1_IP_ADDRESS} | awk '{ print $2 }' > /config/onboarding/mytmp0
     #ipcalc -n `cat /config/onboarding/mytmp0` | awk -F= '{ print $2 }' > /config/onboarding/mytmp1
     #ipcalc -m `cat /config/onboarding/mytmp0` | awk -F= '{ print $2 }' > /config/onboarding/mytmp2
     #echo "tmsh create ltm virtual svr1 source 0.0.0.0/0 destination `cat /config/onboarding/mytmp1`:any mask `cat /config/onboarding/mytmp2`" > /config/onboarding/myVS
     #chmod +x /config/onboarding/myVS
     #/config/onboarding/myVS
     #tmsh save /sys config

     date

runcmd: [nohup sh -c '/config/onboarding/onboard.sh' &]
